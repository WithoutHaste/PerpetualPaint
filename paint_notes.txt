possible names
================
Simply Colors (not original)
95 Paint (sounds too like Windows)
top notch paint (not original)
rabbit paint
rabbit patch paint (rabbit patch is a restaurant in Texas)
alleged paint
tangle paint (zentangle paint is a free app for coloring in pre-existing patterns, 150 color limit)
comic paint
perpetual paint (perpetual painting is a business on facebook)

Perpetual Paint


patreon
==============
set up a donations page for this (not project based, just support)




features
======================
Designed for black and white outline images, like a coloring book. Minor gray-scale supported.

1. Open bitmap/png image as bitmap. Display image on screen with zoom in/out options.

2. Program can identify different coloring sections, based on contiguous white/gray space
	a space is first identified by a y-by-y square of white pixels
	space expands outward in all directions until it is hemmed in by absolute black
	
3. Display color palette
	start with at least one default palette (maybe easter pastels)
	
4. Select color in palette, apply color to any part of the image
	click on absolute black is ignored (minor error noise)
	click on anything else will fill that section with the color
	white is replaced with true color
	grays are replaced with grayed-color
	
5. Re-color a colored section
	Result should be as if you had applied color over white
	
6. Build your own palette and save it

7. Swap colors in the image - like swap all color x sections with color y

8. Build a project of multiple images
	save a config file with all image locations so they can be opened as one project
	save a palette filename with the project
	see all images at once as thumbnails
	focus on one image to see it big
	color swaps can affect all images in the project at once
	
9. Save the resulting image(s)



resources
==================================
drawing and downloading 32x32 pixel icons
	https://www.pixilart.com/draw


design
==================================
C# Windows App
using multiple windows
first window shows one image, zoom in and out, scroll around, apply colors
second (optional) windows is for projects, shows small versions of every image in project, can select one from there to focus on in main window

version 1 will just be the first window
open one image, edit it, save it
support as many save formats as C# easily allows - should be at least bitmap, png, jpg
create and save custom palettes

black is an unchangeable constant value - it is the boundary between coloring areas
when image is opened, auto-detect areas
	based on a 9x9 pixel area of solid non-black, expanding outward
		or find the black edges and work inward
	can probably save complete lists of bits in the image - a set of bits for each section
	and one set for all the black
view: all the black as black, and everything else as white - to verify sections
show image as big as possible
	zoom in and out
	scroll horizontal and vertical
display default palette along one side - it gets its own vertical scroll bar
	you can't save over the default palette
	but you can edit it and save as a custom palette
		add and remove colors (no upper limit on color count)
			no duplicate colors allowed
		edit colors
			color picker
			rgb or hex or hue/saturation/lightness
		auto-sort options
			by hue, saturation, lightness
			by hex value
			whatever makes sense
		drag and drop re-order option?
select color from palette
	click on section of image to see it updated
undo, redo on both palettes and images

Considered updating Colors library to return System.Drawing.Imaging.ColorPalette object
	but you can't instantiate your own ColorPalette
		you can only get Image.Palette
	and you cannot change the length of a ColorPalette
	so sticking with my own
	
	
	
Converting to gray
=========================
Simple conversion
----------------------
r   g   b   h   s    v
000 000 255 240 1.00 1.00 Blue	 OK
000 128 000 120 1.00 50.2 Green	 too dark too fast
128 000 128 300 1.00 50.2 Purple too dark too fast
255 000 000 000 1.00 1.00 Red    OK
255 165 000 039 1.00 1.00 Orange OK
255 255 000 060 1.00 1.00 Yellow OK
	


palette file formats
=========================
Adobe Color: *.aco
	https://www.adobe.com/devnet-apps/photoshop/fileformatashtml/#50577411_pgfId-1055819 (Adobe's specification)
	http://www.nomodes.com/aco.html (explanation)
	https://www.cyotek.com/blog/reading-photoshop-color-swatch-aco-files-using-csharp (reading in C#)
	https://www.cyotek.com/blog/writing-photoshop-color-swatch-aco-files-using-csharp (writing in C#)
	http://www.tigercolor.com/color-lab/Palette-collections/color-palettes.htm (download examples)
hmm, ACO also stands for Ant Colony Optimization, a common problem on Github
not finding a c# solution on Github, so I'll roll my own
new repository - name? ColorPalettes? another library file
	
Paint Shop Pro: *.pal (plain-text file format)
	http://www.tigercolor.com/color-lab/Palette-collections/color-palettes.htm (download examples)
	http://www.cryer.co.uk/file-types/p/pal.htm (file format specification)

GIMP: *.gpl (plain-text file format)
	https://github.com/denilsonsa/gimp-palettes/tree/master/palettes (download examples)
	https://github.com/portnov/color-palette/wiki/Gimp-palette-format-extensions (some description of format)
	
ArtRage: *.col
	???
	
	